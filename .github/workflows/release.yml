name: Build Docker and Create Release

on:
  workflow_dispatch:

permissions:
  contents: write  # Required for creating releases

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest  # Use GitHub-hosted runner

    strategy:
      fail-fast: false
      matrix:
        slurm:
          - version: 24.05.5
        image:
          - context: .
            push: false
            platforms: linux/arm64
            load: true
            ubuntu_version: jammy
            cuda_version: 12.4.1
            build_args:
              BASE_IMAGE=nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up QEMU for ARM64 builds
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
        with:
          install: true

      - name: Build docker images
        uses: docker/build-push-action@v6.12.0
        with:
          context: ${{ matrix.image.context }}
          push: ${{ matrix.image.push }}
          tags: slurm_builder:${{ matrix.image.cuda_version }}-${{ matrix.image.ubuntu_version }}-slurm${{ matrix.slurm.version }}
          platforms: ${{ matrix.image.platforms }}
          load: ${{ matrix.image.load }}
          build-args: |
            ${{ matrix.image.build_args }}
            SLURM_VERSION=${{ matrix.slurm.version }}
          cache-from: type=local,src=.buildx-cache
          cache-to: type=local,dest=.buildx-cache,mode=max

      - name: Create slurm_build_output directory
        run: mkdir -p slurm_build_output

      - name: Run Docker container and copy files
        run: |
          container_id=$(docker create slurm_builder:${{ matrix.image.cuda_version }}-${{ matrix.image.ubuntu_version }}-slurm${{ matrix.slurm.version }})
          docker start $container_id
          docker cp $container_id:/usr/src/debs/ ./slurm_build_output/
          docker cp $container_id:/usr/src/nccl-tests/build/nccl-tests-perf.tar.gz ./slurm_build_output/
          docker rm $container_id

      - name: Create GitHub Release and Upload DEB packages
        uses: softprops/action-gh-release@v2.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.image.cuda_version }}-${{ matrix.image.ubuntu_version }}-slurm${{ matrix.slurm.version }}
          name: Cuda ${{ matrix.image.cuda_version }}, Ubuntu ${{ matrix.image.ubuntu_version }}, Slurm ${{ matrix.slurm.version }}
          body: "Release based on Ubuntu ${{ matrix.image.ubuntu_version }} for Slurm ${{ matrix.slurm.version }} with cuda ${{ matrix.image.cuda_version }}, and nccl-tests"
          draft: false
          prerelease: false
          files: |
            slurm_build_output/debs/*.deb
            slurm_build_output/nccl-tests-perf.tar.gz

      - name: Cleanup
        run: rm -rf slurm_build_output/*.deb
